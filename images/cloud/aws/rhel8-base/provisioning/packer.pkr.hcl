source "amazon-ebs" "autogenerated_1" {
  ami_description = "A RHEL8 AMI for jenkins-master."
  ami_name        = "jenkins-master-{{isotime | clean_ami_name}}"
  ami_regions     = ["us-east-1", "eu-central-1"]
  ami_users       = ["826880170273", "555826987819", "826880170273", "555826987819", "843059940941", "278008729174", "175537927178", "878935197616", "703961524993", "818962185393", "279503120400", "038420111211", "182187695079", "391478500929", "915589473889", "042665208725", "474201989805", "553268290142", "168192528381", "904280233115", "182253250158", "258008982323", "222108305693", "061845575952", "455937818028"]
  instance_type   = "t2.medium"
  region          = "eu-central-1"
  snapshot_users  = ["388833009642", "175537927178", "915589473889", "042665208725"]
  source_ami      = "ami-02da1af10c90eaa04"
  ssh_username    = "ec2-user"
  subnet_filter {
    filters = {
      "tag:Name" = "private-subnet-c"
    }
  }
  subnet_id = "{{ user `subnet_id` }}"
  tags = {
    Base_AMI_Name      = "{{ .SourceAMIName }}"
    Extra              = "{{ .SourceAMITags.TagName }}"
    Linux_Distribution = "RHEL8"
    Project            = "shared-jenkins-master"
    Release            = "Latest"
  }
  vpc_id = "{{ user `vpc_id` }}"
}

build {
  sources = ["source.amazon-ebs.autogenerated_1"]
  
  provisioner "shell" {
    environment_vars = ["git_user=${var.git_user}", "git_pass=${var.git_pass}"]
    remote_path      = "/root/pre_ansible_provisioning.sh"
    script           = "${path.root}/provisioning/scripts/pre_ansible_provisioning.sh"
  }

  provisioner "ansible-local" {
    command       = "ANSIBLE_NOCOLOR=True ansible-playbook"
    playbook_file = "${path.root}/provisioning/ansible/hardening_cis.yml"
  }
  
  provisioner "file" {
    destination = "/tmp/jenkins_install.sh"
    source      = "${path.root}/provisioning/jenkins_install.sh"
  }

  provisioner "file" {
    destination = "/tmp/nginx.conf"
    source      = "${path.root}/provisioning/nginx.conf.tmpl"
  }

  provisioner "shell" {
    inline = ["sudo chmod 755 /tmp/jenkins_install.sh", "echo ${var.jenkins_version}", "sudo jenkins_version=${var.jenkins_version} /tmp/jenkins_install.sh"]
  }

  provisioner "shell" {
    environment_vars = ["image_environment=${var.image_environment}"]
    remote_path      = "/root/post_ansible_provisioning.sh"
    script           = "${path.root}/provisioning/scripts/post_ansible_provisioning.sh"
  }

  post-processor "manifest" {
    output     = "manifest.json"
    strip_path = true
  }

  
}
